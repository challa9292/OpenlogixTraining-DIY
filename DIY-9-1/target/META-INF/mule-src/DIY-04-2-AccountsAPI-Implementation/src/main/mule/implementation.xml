<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="get-accounts" doc:id="ef49e7ea-3a1c-47ff-bf2b-2ee39dccb07a" >
		<db:select doc:id="91aaa51c-4456-45cc-a761-69831c0bccf3" doc:name="flights_customers" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * FROM flights_customers]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="11436436-afef-4b24-a47e-3f3a53462822" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.accountID as Number default 0,
	name: payload01.name default "",
	"type": payload01.accountType default "",
	address: ((((payload01.street default "") ++ "," ++ (payload01.city default "")) ++ "," ++ (payload01.state default "")) ++ "," ++ (payload01.postal default "")) ++ "," ++ (payload01.country default ""),
	air_miles: payload01.miles default 0,
	created_at: payload01.creationDate as String default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="get-accounts-by-id" doc:id="ccb64b18-4a90-4cca-a728-fb9c7b4f90e6" >
		<db:select doc:name="flights_customers by accountID" doc:id="74f8f2aa-2078-40f1-a9c4-bd1d457343c7" config-ref="Database_Config" >
			<db:sql ><![CDATA[SELECT * FROM flights_customers WHERE accountID = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: vars.id
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="2ad70ce0-a66a-4d59-94df-3fadf0a68a52" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.accountID as Number default 0,
	name: payload01.name default "",
	"type": payload01.accountType default "",
	address: ((((payload01.street default "") ++ "," ++ (payload01.city default "")) ++ "," ++ (payload01.state default "")) ++ "," ++ (payload01.postal default "")) ++ "," ++ (payload01.country default ""),
	air_miles: payload01.miles default 0,
	created_at: payload01.creationDate as String default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="retriving-accounts" doc:id="ea74088b-0950-4b6e-a160-76953de84434" >
		<set-variable value="#[attributes.queryParams.account_type]" doc:name="accountType" doc:id="71240245-db1c-4a29-854e-da4c63e96819" variableName="accountType"/>
		<set-variable value="#[attributes.queryParams.account_name]" doc:name="accountName" doc:id="495eedc1-5897-4364-b4a5-9ae060aa5de6" variableName="accountName"/>
		<choice doc:name="Choice" doc:id="b1eafd00-0dcc-45e1-8a51-274cd1572d98" >
			<when expression="#[(vars.accountType== null) and (vars.accountName==null)]">
				<db:select doc:name="flights_customers by accountID" doc:id="335b5152-05af-4c57-ade5-9c1cc0cef4cd" config-ref="Database_Config" >
					<db:sql ><![CDATA[SELECT * FROM flights_customers]]></db:sql>
				</db:select>
			</when>
			<when expression="#[(vars.accountType == null) and (vars.accountName != null)]">
				<db:select doc:name="Select" doc:id="9284f49b-b533-45e6-8cb7-f74c3bc1c8ef" config-ref="Database_Config">
					<db:sql ><![CDATA[SELECT * FROM flights_customers WHERE name = :aName]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	aName: vars.accountName
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[(vars.accountType != null) and (vars.accountName == null)]">
				<db:select doc:name="Select" doc:id="c12ab283-8073-44ab-bd7b-770457305603" config-ref="Database_Config">
					<db:sql ><![CDATA[SELECT * FROM flights_customers WHERE accountType = :aType]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	aType: vars.accountType
}]]]></db:input-parameters>
				</db:select>
			</when>
			<otherwise >
				<db:select doc:name="Select" doc:id="c6dabeb2-f31d-4f74-b547-a94af58d8c45" config-ref="Database_Config">
					<db:sql ><![CDATA[SELECT * FROM flights_customers WHERE accountType = :aType AND name = :aName]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	aType: vars.accountType,
	aName: vars.accountName
}]]]></db:input-parameters>
				</db:select>
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform Message" doc:id="8b92385f-9242-482f-b841-ac31d78c7d00" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.accountID as Number default 0,
	name: payload01.name default "",
	"type": payload01.accountType default "",
	address: ((((payload01.street default "") ++ "," ++ (payload01.city default "")) ++ "," ++ (payload01.state default "")) ++ "," ++ (payload01.postal default "")) ++ "," ++ (payload01.country default ""),
	air_miles: payload01.miles default 0,
	created_at: payload01.creationDate as String default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="End Logger" doc:id="b96ad1a0-ceec-4934-b865-b3b5be2aad76" message="End Logger"/>
	</flow>

</mule>
